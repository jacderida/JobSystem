@model JobSystem.Mvc.ViewModels.Orders.OrderCreateViewModel
@{
	ViewBag.Title = "Raise Order";
}
<h2>Raise Order</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="create-order-container">
@using (Html.BeginForm("Create", "Order", FormMethod.Post))
{
	@Html.ValidationSummary(true)
	<span class="form-section">
		Details
	</span>
	<fieldset>
		<div class="editor-label">
			@Html.LabelFor(model => model.SupplierId)
		</div>
		<div class="editor-field">
			@Html.TextBox("SupplierAutocomplete", "", new { id = "supplier-autocomplete" })
			@Html.ValidationMessageFor(model => model.SupplierId)
			@Html.HiddenFor(model => model.SupplierId, new { id = "SupplierId" })
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Instructions)
		</div>
		<div class="editor-field">
			@Html.TextAreaFor(model => model.Instructions)
			@Html.ValidationMessageFor(model => model.Instructions)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Description)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.Description)
			@Html.ValidationMessageFor(model => model.Description)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.PartNo)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.PartNo, new { @class = "short-text" })
			@Html.ValidationMessageFor(model => model.PartNo)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.DeliveryDays)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.DeliveryDays, new { @class = "short-text" })
			@Html.ValidationMessageFor(model => model.DeliveryDays)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Price)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.Price, new { @class = "short-text" })
			@Html.ValidationMessageFor(model => model.Price)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Quantity)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.Quantity, new { @class = "short-text" })
			@Html.ValidationMessageFor(model => model.Quantity)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.IsIndividual)
		</div>
		<div class="editor-field">
			@Html.CheckBoxFor(model => model.IsIndividual, new { id ="orderCurrencyCheckbox" })
			@Html.ValidationMessageFor(model => model.IsIndividual)
		</div>
		<div id="currencyContainer">
			<div class="editor-label">
				@Html.LabelFor(model => model.Currencies)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.CurrencyId, Model.Currencies, new { @class = "short-text" })
				@Html.ValidationMessageFor(model => model.IsIndividual)
			</div>
		</div>
		@Html.HiddenFor(m => m.JobItemId)
		@Html.HiddenFor(m => m.JobId)
		@Html.HiddenFor(m => m.RaisedFromMainTab)
	</fieldset>
	<input type="submit" class="primary-action" value="Raise"/>
	<a href="@Url.Action("Index", "Order")" class="secondary-action">Cancel</a>
}
</div>
