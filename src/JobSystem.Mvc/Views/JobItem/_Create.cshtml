@model JobSystem.Mvc.ViewModels.JobItems.JobItemViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/common.js")" type="text/javascript"></script>

<div id="create-job-item-container">
@using (Html.BeginForm("Create", "JobItem", FormMethod.Post))
{
	@Html.ValidationSummary(true)
	<div id="job-item-create-topfields">
		<fieldset class="fieldset-float-left">
			<div class="editor-label">
				@Html.LabelFor(model => model.Instruments)
			</div>
			<div class="editor-field">
				@Html.TextBox("InstrumentAutocomplete", "", new { id = "instrument-autocomplete" })
				@Html.HiddenFor(model => model.InstrumentId, new { id = "InstrumentId" })
				@*@Html.TextBoxFor(model => model.Instruments, new { id = "instrument-autocomplete" })*@
				@*@Html.ValidationMessageFor(model => model.Instruments)*@
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.SerialNo)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.SerialNo)
				@Html.ValidationMessageFor(model => model.SerialNo)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.AssetNo)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(model => model.AssetNo)
				@Html.ValidationMessageFor(model => model.AssetNo)
			</div>
		</fieldset>
		<div class="clear-right"></div>
		<fieldset class="fieldset-float-right" id="job-item-create-rightfields">
			<div class="editor-label">
				@Html.LabelFor(model => model.Accessories)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(model => model.Accessories, new { @class ="job-item-create-textarea" })
				@Html.ValidationMessageFor(model => model.Accessories)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.Comments)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(model => model.Comments, new { @class = "job-item-create-textarea" })
				@Html.ValidationMessageFor(model => model.Comments)
			</div>
			<div class="editor-label">
				@Html.LabelFor(model => model.Instructions)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(model => model.Instructions, new { @class = "job-item-create-textarea" })
				@Html.ValidationMessageFor(model => model.Instructions)
			</div>
			<div class="editor-label">
			@Html.LabelFor(model => model.IsReturned)
		</div>
		<div class="editor-field">
			@Html.CheckBoxFor(model => model.IsReturned)
			@Html.ValidationMessageFor(model => model.IsReturned)
		</div>
		<div id="return-reason-group">
			<div class="editor-label">
				@Html.LabelFor(model => model.ReturnReason)
			</div>
			<div class="editor-field">
				@Html.TextAreaFor(model => model.ReturnReason, new { @class = "job-item-create-textarea" })
				@Html.ValidationMessageFor(model => model.ReturnReason)
			</div>
		</div>
		</fieldset>
	</div>
	<fieldset class="fieldset-float-left">
		<div class="editor-label">
			@Html.LabelFor(model => model.CalPeriod)
		</div>
		<div class="editor-field">
			@Html.TextBoxFor(model => model.CalPeriod, new { @Value = "12" })
			@Html.ValidationMessageFor(model => model.CalPeriod)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Fields)
		</div>
		<div class="editor-field">
			@Html.DropDownListFor(model => model.FieldId, Model.Fields)
			@Html.ValidationMessageFor(model => model.Fields)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Status)
		</div>
		<div class="editor-field">
			@Html.DropDownListFor(model => model.InitialStatusId, Model.Status)
			@Html.ValidationMessageFor(model => model.Status)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Locations)
		</div>
		<div class="editor-field">
			@Html.DropDownListFor(model => model.LocationId, Model.Locations)
			@Html.ValidationMessageFor(model => model.Locations)
		</div>
	</fieldset>
	@Html.HiddenFor(model => model.JobId)
	<div class="clear"></div>
	<div class="buttons-row">
		<input type="submit" class="primary-action" value="Create"/>
	</div>
}
</div>
